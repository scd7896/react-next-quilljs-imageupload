{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6f06473ab859234d9d2f.hot-update.js","sources":["webpack:///./components/TestEdit.js"],"sourcesContent":["import React,{useState, useEffect, useRef} from 'react'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\n\r\n\r\nconst EditPost = ()=>{\r\n    let ReactQuill\r\n    let quillRef = useRef()\r\n    let dropzone = useRef()\r\n    let DropZone, ImageFile\r\n    const [text, setText] = useState('')\r\n    const [showContent, setShowContent] = useState('')\r\n    if(typeof window !== 'undefined'){\r\n        ReactQuill = require('react-quill')\r\n    }\r\n    \r\n    \r\n    const quillModules = {\r\n        toolbar :{\r\n            container : [['bold', 'italic', 'underline', 'strike'], ['image']],\r\n            handlers :{\r\n                image : ()=>{\r\n                    const input = document.createElement('input')\r\n                    input.setAttribute('type', 'file')\r\n                    input.setAttribute('accept', 'image/*')\r\n                    input.click()\r\n                    input.addEventListener('change',()=>{\r\n                        console.log('이미지 변환됨')\r\n                    })\r\n                    // input.onChange = async()=>{\r\n                    //     console.log('이미지 변환됨')\r\n                    //     const file = input.files[0]\r\n                    //     const formData = new FormData()\r\n                    //     formData.append('image', file)\r\n                    //     const quill = quillRef.current.getEditor()\r\n                    //     const range = quill.getSelection(true);    \r\n                    //     // quill.insertEmbed(range.index,'image',)\r\n                        \r\n                        \r\n                    // }\r\n                    \r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    const setContent = (e)=>{\r\n        if(e.match(/^<p><img/g)){\r\n            //여기서 변환 코드를 작성하자\r\n            console.log('파일이 들어온것이여')\r\n        }\r\n        console.log(e)\r\n        setText(e)\r\n    }\r\n    const saveContents = ()=>{\r\n        let arr = text.split('<p>')\r\n        arr = arr.filter((e)=> e !== '')\r\n        arr =arr.map(el => '<p>' +el)\r\n        console.log(arr)\r\n        \r\n        axios.post('http://localhost:3060/api/posts',{\r\n            title : 'test',\r\n            arr\r\n        })\r\n        // axios.get('http://localhost:3060/api/test')\r\n        //     .then((res)=> setShowContent(res.data))\r\n        //     .catch((err)=> console.error(err))\r\n        // socket.on('connect', ()=>{\r\n        //     console.log(socket.id)\r\n        // })\r\n        // webSocekt.onmessage = (e)=>{\r\n        //     console.log(e.data)\r\n        // }\r\n        // webSocekt.onopen = ()=>{\r\n        //     console.log(text)\r\n        //     conn.send(text)\r\n        // }\r\n        // webSocekt.onerror = (message)=>{\r\n        //      console.log(message)\r\n        // }\r\n        setText('')\r\n    }\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n    return typeof window !== \"undefined\" && ReactQuill ? (\r\n      <div>\r\n          <label>\r\n            <ReactQuill\r\n                ref = {quillRef}\r\n                value = {text}\r\n                placeholder = {'내용을 입력하시오'}\r\n                modules = {quillModules}\r\n                onChange={setContent}\r\n            />\r\n        </label>\r\n        <button onClick ={saveContents}>내용 저장해버리기~</button>\r\n        <Link href = {{pathname : `/posts`, query:{id : 2}}} \r\n            as ={`/posts/2`}><a>내용 불러버리기</a></Link>\r\n        <div>\r\n            {showContent ? showContent: ''}\r\n        </div>\r\n      </div>\r\n      \r\n    ) : null;\r\n  }\r\n\r\nexport default EditPost"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAtBA;AAFA;AADA;AACA;AA6BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAQA;AACA;AACA;;;;A","sourceRoot":""}