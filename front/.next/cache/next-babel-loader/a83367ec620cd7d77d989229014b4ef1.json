{"ast":null,"code":"import React, { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\n\nconst EditPost = () => {\n  let ReactQuill;\n  let quillRef = useRef();\n  let dropzone = useRef();\n  let DropZone, ImageFile;\n  const [text, setText] = useState('');\n  const [showContent, setShowContent] = useState('');\n\n  if (typeof window !== 'undefined') {\n    ReactQuill = require('react-quill');\n    DropZone = require('react-dropzone');\n    ImageFile = require('react-dropzone').ImageFile;\n  }\n\n  const onDrop = () => {\n    console.log('이미지드랍');\n  };\n\n  const quillModules = {\n    toolbar: {\n      container: [['bold', 'italic', 'underline', 'strike'], ['image']],\n      handlers: {\n        image: () => {\n          const input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          input.setAttribute('accept', 'image/*');\n          input.click();\n\n          input.onChange = async () => {\n            const file = input.files[0];\n            const formData = new FormData();\n            formData.append('image', file);\n            const quill = quillRef.current.getEditor();\n            const range = quill.getSelection(true); // quill.insertEmbed(range.index,'image',)\n\n            console.log(formData);\n          };\n        }\n      }\n    }\n  };\n\n  const setContent = e => {\n    if (e.match(/^<p><img/g)) {\n      //여기서 변환 코드를 작성하자\n      console.log('파일이 들어온것이여');\n    }\n\n    console.log(e);\n    setText(e);\n  };\n\n  const saveContents = () => {\n    let arr = text.split('<p>');\n    arr = arr.filter(e => e !== '');\n    arr = arr.map(el => '<p>' + el);\n    console.log(arr);\n    axios.post('http://localhost:3060/api/posts', {\n      title: 'test',\n      arr\n    }); // axios.get('http://localhost:3060/api/test')\n    //     .then((res)=> setShowContent(res.data))\n    //     .catch((err)=> console.error(err))\n    // socket.on('connect', ()=>{\n    //     console.log(socket.id)\n    // })\n    // webSocekt.onmessage = (e)=>{\n    //     console.log(e.data)\n    // }\n    // webSocekt.onopen = ()=>{\n    //     console.log(text)\n    //     conn.send(text)\n    // }\n    // webSocekt.onerror = (message)=>{\n    //      console.log(message)\n    // }\n\n    setText('');\n  };\n\n  useEffect(() => {}, []);\n  return typeof window !== \"undefined\" && ReactQuill ? React.createElement(\"div\", null, React.createElement(\"label\", null, React.createElement(ReactQuill, {\n    ref: quillRef,\n    value: text,\n    placeholder: '내용을 입력하시오',\n    modules: quillModules,\n    onChange: setContent\n  })), React.createElement(DropZone, {\n    onDrop: onDrop,\n    accept: \"image/*\"\n  }), React.createElement(\"button\", {\n    onClick: saveContents\n  }, \"\\uB0B4\\uC6A9 \\uC800\\uC7A5\\uD574\\uBC84\\uB9AC\\uAE30~\"), React.createElement(Link, {\n    href: {\n      pathname: `/posts`,\n      query: {\n        id: 2\n      }\n    },\n    as: `/posts/2`\n  }, React.createElement(\"a\", null, \"\\uB0B4\\uC6A9 \\uBD88\\uB7EC\\uBC84\\uB9AC\\uAE30\")), React.createElement(\"div\", null, showContent ? showContent : '')) : null;\n};\n\nexport default EditPost;","map":{"version":3,"sources":["C:\\Users\\scd78\\Desktop\\react-next-quilljs\\front\\components\\TestEdit.js"],"names":["React","useState","useEffect","useRef","Link","axios","EditPost","ReactQuill","quillRef","dropzone","DropZone","ImageFile","text","setText","showContent","setShowContent","window","require","onDrop","console","log","quillModules","toolbar","container","handlers","image","input","document","createElement","setAttribute","click","onChange","file","files","formData","FormData","append","quill","current","getEditor","range","getSelection","setContent","e","match","saveContents","arr","split","filter","map","el","post","title","pathname","query","id"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useRef} from 'react'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\n\r\n\r\nconst EditPost = ()=>{\r\n    let ReactQuill\r\n    let quillRef = useRef()\r\n    let dropzone = useRef()\r\n    let DropZone, ImageFile\r\n    const [text, setText] = useState('')\r\n    const [showContent, setShowContent] = useState('')\r\n    if(typeof window !== 'undefined'){\r\n        ReactQuill = require('react-quill')\r\n        DropZone = require('react-dropzone')\r\n        ImageFile = require('react-dropzone').ImageFile\r\n        \r\n    }\r\n    \r\n    const onDrop = ()=>{\r\n        console.log('이미지드랍')\r\n    }\r\n    const quillModules = {\r\n        toolbar :{\r\n            container : [['bold', 'italic', 'underline', 'strike'], ['image']],\r\n            handlers :{\r\n                image : ()=>{\r\n                    const input = document.createElement('input')\r\n                    input.setAttribute('type', 'file')\r\n                    input.setAttribute('accept', 'image/*')\r\n                    input.click()\r\n\r\n                    input.onChange = async()=>{\r\n                        const file = input.files[0]\r\n                        const formData = new FormData()\r\n                        formData.append('image', file)\r\n                        const quill = quillRef.current.getEditor()\r\n                        const range = quill.getSelection(true);    \r\n                        // quill.insertEmbed(range.index,'image',)\r\n                        console.log(formData)\r\n                        \r\n                    }\r\n                    \r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    const setContent = (e)=>{\r\n        if(e.match(/^<p><img/g)){\r\n            //여기서 변환 코드를 작성하자\r\n            console.log('파일이 들어온것이여')\r\n        }\r\n        console.log(e)\r\n        setText(e)\r\n    }\r\n    const saveContents = ()=>{\r\n        let arr = text.split('<p>')\r\n        arr = arr.filter((e)=> e !== '')\r\n        arr =arr.map(el => '<p>' +el)\r\n        console.log(arr)\r\n        \r\n        axios.post('http://localhost:3060/api/posts',{\r\n            title : 'test',\r\n            arr\r\n        })\r\n        // axios.get('http://localhost:3060/api/test')\r\n        //     .then((res)=> setShowContent(res.data))\r\n        //     .catch((err)=> console.error(err))\r\n        // socket.on('connect', ()=>{\r\n        //     console.log(socket.id)\r\n        // })\r\n        // webSocekt.onmessage = (e)=>{\r\n        //     console.log(e.data)\r\n        // }\r\n        // webSocekt.onopen = ()=>{\r\n        //     console.log(text)\r\n        //     conn.send(text)\r\n        // }\r\n        // webSocekt.onerror = (message)=>{\r\n        //      console.log(message)\r\n        // }\r\n        setText('')\r\n    }\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n    return typeof window !== \"undefined\" && ReactQuill ? (\r\n      <div>\r\n          <label>\r\n            <ReactQuill\r\n                ref = {quillRef}\r\n                value = {text}\r\n                placeholder = {'내용을 입력하시오'}\r\n                modules = {quillModules}\r\n                onChange={setContent}\r\n            />\r\n        </label>\r\n        <DropZone\r\n                onDrop = {onDrop}\r\n                accept = 'image/*'\r\n                />\r\n        <button onClick ={saveContents}>내용 저장해버리기~</button>\r\n        <Link href = {{pathname : `/posts`, query:{id : 2}}} \r\n            as ={`/posts/2`}><a>내용 불러버리기</a></Link>\r\n        <div>\r\n            {showContent ? showContent: ''}\r\n        </div>\r\n      </div>\r\n      \r\n    ) : null;\r\n  }\r\n\r\nexport default EditPost"]},"metadata":{},"sourceType":"module"}