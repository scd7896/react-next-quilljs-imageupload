{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\n\nvar EditPost = function EditPost() {\n  var ReactQuill;\n  var quillRef = useRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showContent = _useState4[0],\n      setShowContent = _useState4[1];\n\n  if (typeof window !== 'undefined') {\n    ReactQuill = require('react-quill');\n  }\n\n  var quillModules = {\n    toolbar: {\n      container: [['bold', 'italic', 'underline', 'strike'], ['image']],\n      handlers: {\n        image: function image() {\n          var input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          input.setAttribute('accept', 'image/*');\n          input.click();\n          input.onChange =\n          /*#__PURE__*/\n          _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var file, formData, quill, range;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    file = input.files[0];\n                    formData = new FormData();\n                    formData.append('image', file);\n                    quill = quillRef.current.getEditor();\n                    range = quill.getSelection(true); // quill.insertEmbed(range.index,'image',)\n\n                    console.log(formData);\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      }\n    }\n  };\n\n  var setContent = function setContent(e) {\n    if (e.match(/^<p><img/g)) {\n      //여기서 변환 코드를 작성하자\n      console.log('파일이 들어온것이여');\n    }\n\n    console.log(e);\n    setText(e);\n  };\n\n  var saveContents = function saveContents() {\n    var arr = text.split('<p>');\n    arr = arr.filter(function (e) {\n      return e !== '';\n    });\n    arr = arr.map(function (el) {\n      return '<p>' + el;\n    });\n    console.log(arr);\n    axios.post('http://localhost:3060/api/posts', {\n      title: 'test',\n      arr: arr\n    }); // axios.get('http://localhost:3060/api/test')\n    //     .then((res)=> setShowContent(res.data))\n    //     .catch((err)=> console.error(err))\n    // socket.on('connect', ()=>{\n    //     console.log(socket.id)\n    // })\n    // webSocekt.onmessage = (e)=>{\n    //     console.log(e.data)\n    // }\n    // webSocekt.onopen = ()=>{\n    //     console.log(text)\n    //     conn.send(text)\n    // }\n    // webSocekt.onerror = (message)=>{\n    //      console.log(message)\n    // }\n\n    setText('');\n  };\n\n  useEffect(function () {}, []);\n  return typeof window !== \"undefined\" && ReactQuill ? React.createElement(\"div\", null, React.createElement(\"label\", null, React.createElement(ReactQuill, {\n    ref: quillRef,\n    value: text,\n    placeholder: '내용을 입력하시오',\n    modules: quillModules,\n    onChange: setContent\n  })), React.createElement(\"button\", {\n    onClick: saveContents\n  }, \"\\uB0B4\\uC6A9 \\uC800\\uC7A5\\uD574\\uBC84\\uB9AC\\uAE30~\"), React.createElement(Link, {\n    href: {\n      pathname: \"/posts\",\n      query: {\n        id: 2\n      }\n    },\n    as: \"/posts/2\"\n  }, React.createElement(\"a\", null, \"\\uB0B4\\uC6A9 \\uBD88\\uB7EC\\uBC84\\uB9AC\\uAE30\")), React.createElement(\"div\", null, showContent ? showContent : '')) : null;\n};\n\nexport default EditPost;","map":{"version":3,"sources":["C:\\Users\\scd78\\Desktop\\react-next-quilljs\\front\\components\\TestEdit.js"],"names":["React","useState","useEffect","useRef","Link","axios","EditPost","ReactQuill","quillRef","text","setText","showContent","setShowContent","window","require","quillModules","toolbar","container","handlers","image","input","document","createElement","setAttribute","click","onChange","file","files","formData","FormData","append","quill","current","getEditor","range","getSelection","console","log","setContent","e","match","saveContents","arr","split","filter","map","el","post","title","pathname","query","id"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useRef} from 'react'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\n\r\nconst EditPost = ()=>{\r\n    let ReactQuill\r\n    let quillRef = useRef()\r\n    const [text, setText] = useState('')\r\n    const [showContent, setShowContent] = useState('')\r\n    if(typeof window !== 'undefined'){\r\n        ReactQuill = require('react-quill')\r\n        \r\n    }\r\n    \r\n    \r\n    const quillModules = {\r\n        toolbar :{\r\n            container : [['bold', 'italic', 'underline', 'strike'], ['image']],\r\n            handlers :{\r\n                image : ()=>{\r\n                    const input = document.createElement('input')\r\n                    input.setAttribute('type', 'file')\r\n                    input.setAttribute('accept', 'image/*')\r\n                    input.click()\r\n\r\n                    input.onChange = async()=>{\r\n                        const file = input.files[0]\r\n                        const formData = new FormData()\r\n                        formData.append('image', file)\r\n                        const quill = quillRef.current.getEditor()\r\n                        const range = quill.getSelection(true);    \r\n                        // quill.insertEmbed(range.index,'image',)\r\n                        console.log(formData)\r\n                        \r\n                    }\r\n                    \r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    const setContent = (e)=>{\r\n        if(e.match(/^<p><img/g)){\r\n            //여기서 변환 코드를 작성하자\r\n            console.log('파일이 들어온것이여')\r\n        }\r\n        console.log(e)\r\n        setText(e)\r\n    }\r\n    const saveContents = ()=>{\r\n        let arr = text.split('<p>')\r\n        arr = arr.filter((e)=> e !== '')\r\n        arr =arr.map(el => '<p>' +el)\r\n        console.log(arr)\r\n        \r\n        axios.post('http://localhost:3060/api/posts',{\r\n            title : 'test',\r\n            arr\r\n        })\r\n        // axios.get('http://localhost:3060/api/test')\r\n        //     .then((res)=> setShowContent(res.data))\r\n        //     .catch((err)=> console.error(err))\r\n        // socket.on('connect', ()=>{\r\n        //     console.log(socket.id)\r\n        // })\r\n        // webSocekt.onmessage = (e)=>{\r\n        //     console.log(e.data)\r\n        // }\r\n        // webSocekt.onopen = ()=>{\r\n        //     console.log(text)\r\n        //     conn.send(text)\r\n        // }\r\n        // webSocekt.onerror = (message)=>{\r\n        //      console.log(message)\r\n        // }\r\n        setText('')\r\n    }\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n    return typeof window !== \"undefined\" && ReactQuill ? (\r\n      <div>\r\n          <label>\r\n            <ReactQuill\r\n                ref = {quillRef}\r\n                value = {text}\r\n                placeholder = {'내용을 입력하시오'}\r\n                modules = {quillModules}\r\n                onChange={setContent}\r\n            />\r\n        </label>\r\n        <button onClick ={saveContents}>내용 저장해버리기~</button>\r\n        <Link href = {{pathname : `/posts`, query:{id : 2}}} \r\n            as ={`/posts/2`}><a>내용 불러버리기</a></Link>\r\n        <div>\r\n            {showContent ? showContent: ''}\r\n        </div>\r\n      </div>\r\n      \r\n    ) : null;\r\n  }\r\n\r\nexport default EditPost"]},"metadata":{},"sourceType":"module"}